<?xml version="1.0" encoding="utf-8"?>
<!-- Read this before creating packages: https://chocolatey.org/docs/create-packages -->
<!-- It is especially important to read the above link to understand additional requirements when publishing packages to the community feed aka dot org (https://community.chocolatey.org/packages). -->

<!-- Test your packages in a test environment: https://github.com/chocolatey/chocolatey-test-environment -->

<!--
This is a nuspec. It mostly adheres to https://docs.nuget.org/create/Nuspec-Reference. Chocolatey uses a special version of NuGet.Core that allows us to do more than was initially possible. As such there are certain things to be aware of:

* the package xmlns schema url may cause issues with nuget.exe
* Any of the following elements can ONLY be used by choco tools - projectSourceUrl, docsUrl, mailingListUrl, bugTrackerUrl, packageSourceUrl, provides, conflicts, replaces
* nuget.exe can still install packages with those elements but they are ignored. Any authoring tools or commands will error on those elements
-->

<!-- You can embed software files directly into packages, as long as you are not bound by distribution rights. -->
<!-- * If you are an organization making private packages, you probably have no issues here -->
<!-- * If you are releasing to the community feed, you need to consider distribution rights. -->
<!-- Do not remove this test for UTF-8: if “Ω” doesn’t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <!-- == PACKAGE SPECIFIC SECTION == -->
    <!-- This section is about this package, although id and version have ties back to the software -->
    <!-- id is lowercase and if you want a good separator for words, use '-', not '.'. Dots are only acceptable as suffixes for certain types of packages, e.g. .install, .portable, .extension, .template -->
    <!-- If the software is cross-platform, attempt to use the same id as the debian/rpm package(s) if possible. -->
    <id>radarr</id>
    <!-- version should MATCH as closely as possible with the underlying software -->
    <!-- Is the version a prerelease of a version? https://docs.nuget.org/create/versioning#creating-prerelease-packages -->
    <!-- Note that unstable versions like 0.0.1 can be considered a released version, but it's possible that one can release a 0.0.1-beta before you release a 0.0.1 version. If the version number is final, that is considered a released version and not a prerelease. -->
    <version>6.0.3.10276</version>
    <owners>Maurice Kevenaar</owners>
    <!-- ============================== -->

    <!-- == SOFTWARE SPECIFIC SECTION == -->
    <!-- This section is about the software itself -->
    <title>Radarr</title>
    <authors>https://github.com/Radarr/Radarr/graphs/contributors</authors>
    <!-- projectUrl is required for the community feed -->
    <projectUrl>https://radarr.video/</projectUrl>
    <iconUrl>https://cdn.jsdelivr.net/gh/mkevenaar/chocolatey-packages@d8fcd2811c42e9f7401946802dc57da9a7b2b585/icons/radarr.png</iconUrl>
    <!-- copyright is usually years and software vendor, but not required for internal feeds -->
    <copyright>© 2020 Radarr. All rights reserved.</copyright>
    <tags>radarr pvr p2p filesharing torrent nntp admin</tags>
    <releaseNotes>https://github.com/Radarr/Radarr/releases</releaseNotes>
    <licenseUrl>https://github.com/Radarr/Radarr/blob/develop/LICENSE</licenseUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <packageSourceUrl>https://github.com/mkevenaar/chocolatey-packages/tree/master/automatic/radarr</packageSourceUrl>
    <docsUrl>https://wiki.servarr.com/radarr</docsUrl>
    <mailingListUrl>https://www.reddit.com/r/radarr/</mailingListUrl>
    <bugTrackerUrl>https://github.com/radarr/radarr/issues</bugTrackerUrl>
    <projectSourceUrl>https://github.com/radarr/radarr</projectSourceUrl>
    <summary>Movie PVR for Usenet and BitTorrent</summary>
    <description><![CDATA[Radarr is an **independent** fork of [Sonarr](https://github.com/Sonarr/Sonarr) reworked for automatically downloading movies via Usenet and BitTorrent.

The project was inspired by other Usenet/BitTorrent movie downloaders such as CouchPotato.

## Features

- Adding new movies with lots of information, such as trailers, ratings, etc.
- Support for major platforms: Windows, Linux, macOS, Raspberry Pi, etc.
- Can watch for better quality of the movies you have and do an automatic upgrade. _eg. from DVD to Blu-Ray_
- Automatic failed download handling will try another release if one fails
- Manual search so you can pick any release or to see why a release was not downloaded automatically
- Full integration with SABnzbd and NZBGet
- Automatically searching for releases as well as RSS Sync
- Automatically importing downloaded movies
- Recognizing Special Editions, Director's Cut, etc.
- Identifying releases with hardcoded subs
- All indexers supported by Sonarr also supported
- New PassThePopcorn Indexer
- QBittorrent, Deluge, rTorrent, Transmission and uTorrent download client (Other clients are coming)
- New TorrentPotato Indexer
- Torznab Indexer now supports Movies (Works well with [Jackett](https://github.com/Jackett/Jackett))
- Scanning PreDB to know when a new release is available
- Importing movies from various online sources, such as IMDb Watchlists (A complete list can be found [here](https://github.com/Radarr/Radarr/issues/114))
- Full integration with Kodi, Plex (notification, library update)
- And a beautiful UI

## Community

- [Discord](https://radarr.video/discord)
- [Reddit](https://www.reddit.com/r/radarr)

## Notes

Installs as a service, to get to Radarr open browser and go to [localhost]:7878 (remove the brackets)

**Please Note**: This is an automatically updated package. If you find it is
out of date by more than a day or two, please contact the maintainer(s) and
let them know [here](https://github.com/mkevenaar/chocolatey-packages/issues) that the package is no longer updating correctly.
]]></description>
    <!-- =============================== -->

    <!-- Specifying dependencies and version ranges? https://docs.nuget.org/create/versioning#specifying-version-ranges-in-.nuspec-files -->
    <!-- <dependencies>
    </dependencies> -->

    <!--<provides>NOT YET IMPLEMENTED</provides>-->
    <!--<conflicts>NOT YET IMPLEMENTED</conflicts>-->
    <!--<replaces>NOT YET IMPLEMENTED</replaces>-->
    </metadata>
  <!-- this section controls what actually gets packaged into the Chocolatey package -->
  <!-- Uncomment to limit what is packed in -->
    <files>
        <file src="tools\**" target="tools" />
        <file src="legal\**" target="legal" />
    </files>
</package>
